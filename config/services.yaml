# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    exception_to_status:
        InvalidArgumentException: 400
        App\Delegation\Domain\Exception\InvalidPeriodException: 400
        App\Delegation\Domain\Exception\DelegationOverlappingWithAnotherException: 400
        App\User\Domain\Exception\ForbiddenException: 403
        App\Shared\Infrastructure\Persistence\ReadModel\Exception\NotFoundException: 404
        Broadway\Repository\AggregateNotFoundException: 404

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $eventBus: '@broadway.event_handling.event_bus'
            $eventStore: '@Broadway\EventStore\Dbal\DBALEventStore'

    _instanceof:
        App\Shared\Application\Command\CommandHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: messenger.bus.command }

        App\Shared\Application\Query\QueryHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: messenger.bus.query }

        App\Shared\Infrastructure\Bus\AsyncEvent\AsyncEventHandlerInterface:
            public: true
            tags:
                - { name: messenger.message_handler, bus: messenger.bus.event.async }

        Broadway\EventHandling\EventListener:
            public: true
            tags:
                - { name: broadway.domain.event_listener }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/App/*'
        exclude: '../src/App/**/{Migrations,EventSubscriber}'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Symfony\Component\DependencyInjection\ContainerInterface: '@service_container'

    App\Shared\Infrastructure\Bus\Command\MessengerCommandBus:
        arguments:
            - '@messenger.bus.command'

    App\Shared\Infrastructure\Bus\Query\MessengerQueryBus:
        arguments:
            - '@messenger.bus.query'

    App\Shared\Infrastructure\Bus\AsyncEvent\MessengerAsyncEventBus:
        arguments:
            - '@messenger.bus.event.async'

    Broadway\EventStore\Dbal\DBALEventStore:
        public: true
        arguments:
            - '@doctrine.dbal.default_connection'
            - '@broadway.serializer.payload'
            - '@broadway.serializer.metadata'
            - 'events'
            - true
            - '@broadway.uuid.converter'

    UI\Http\Rest\Controller\:
        resource: '../src/UI/Http/Rest/Controller/*'
        tags: [ 'controller.service_arguments' ]

    UI\Http\Rest\EventSubscriber\ExceptionSubscriber:
        arguments:
            - "%kernel.environment%"
            - "%exception_to_status%"
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    UI\Http\Rest\EventSubscriber\JsonBodyParserSubscriber:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 100 }
